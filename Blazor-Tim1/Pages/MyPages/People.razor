@page "/Data/People"
@using DataAccessLibrary
@using DataAccessLibrary.Models
@using Blazor_Tim1.Models

@inject IPeopleData _db
<!-- Might need more than one -->

<h2>People</h2>
<h4>Insert new Person</h4>
<EditForm Model="@newPerson" OnValidSubmit="@InsertPerson">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <InputText id="firstName" @bind-Value="newPerson.FirstName" />
    <InputText id="lastName" @bind-Value="newPerson.LastName" />
    <InputText id="emailAddress" @bind-Value="newPerson.EmailAddress" />

    <button type="submit" class="btn btn-primary">Submit</button>

</EditForm>

<h4>Current People</h4>
@if (people is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email Address</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var person in people)
            {
                <tr>
                    <!--td>person.BirthDate.ToShortDateString()<td-->
                    <td>@person.FirstName</td>
                    <td>@person.LastName</td>
                    <td>@person.EmailAddress</td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    private List<PersonModel> people;
    // Instantiate this right away
    private DisplayPersonModel newPerson = new DisplayPersonModel();

    protected override async Task OnInitializedAsync()
    {
        //return base.OnInitializedAsync() // Default boilerplate
        //people = await _db.GetPeople();
        people = await _db.GetPeople("select * from dbo.People");
        //people = await _db.GetPeople("select top(10) LastName, name as firstName, PERSONEMAIL as emailaddress from [dbo].[accounts]");
        // where lastname like 'Car%'");

    }

    //private void InsertPerson()
    private async Task InsertPerson()
    {
        // await _db.InsertPerson(newPerson); // Fails because different model
        PersonModel p = new PersonModel
            {
                FirstName = newPerson.FirstName,
                LastName = newPerson.LastName,
                EmailAddress = newPerson.EmailAddress
            };

        await _db.InsertPerson(p);
        people.Add(p); // @1:10:35 ... shows nothing Db specific, so needs no Db call
        newPerson = new DisplayPersonModel(); // wipe out info from lst insert.
    }
}
